name: Release to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

env:
  PYTHON_VERSION: "3.12"

jobs:
  build-and-validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      
    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}
      
    - name: Install dependencies
      run: uv sync --all-extras
      
    - name: Run quality checks
      run: |
        echo "🔍 Running quality checks..."
        uv run ruff check
        uv run ruff format --check
        uv run pyright
        uv run pytest tests/ -v --cov=src/starui
        
    - name: Build package
      run: |
        echo "📦 Building package..."
        uv build
        
    - name: Check package contents
      run: |
        echo "🔍 Checking package contents..."
        uv run python -m pip install dist/*.whl
        uv run python -c "import starui; print(f'StarUI version: {starui.__version__}')"
        uv run star --version
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-test-pypi:
    runs-on: ubuntu-latest
    needs: build-and-validate
    if: github.event_name == 'workflow_dispatch'
    environment: testpypi
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true

  publish-pypi:
    runs-on: ubuntu-latest
    needs: build-and-validate
    if: startsWith(github.ref, 'refs/tags/v')
    environment: pypi
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
    - name: Download artifacts  
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true

  create-github-release:
    runs-on: ubuntu-latest
    needs: [build-and-validate, publish-pypi]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        
    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Determine if pre-release
      id: prerelease
      run: |
        if [[ "${{ steps.version.outputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "prerelease=false" >> $GITHUB_OUTPUT
        else
          echo "prerelease=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Extract changelog for version
      id: changelog
      run: |
        VERSION="${GITHUB_REF#refs/tags/v}"
        
        # Extract the changelog section for this version
        awk -v version="## [$VERSION]" '
        BEGIN { found=0; content="" }
        $0 ~ version { found=1; next }
        found && /^## \[/ && $0 !~ version { exit }
        found { content = content $0 "\n" }
        END { print content }
        ' CHANGELOG.md > version_changelog.md
        
        # If no specific changelog found, create generic release notes
        if [ ! -s version_changelog.md ]; then
          cat > version_changelog.md << EOF
        ### Installation
        \`\`\`bash
        pip install starui==$VERSION
        # or with uv  
        uv add starui==$VERSION
        \`\`\`
        
        ### Quick Start
        \`\`\`bash
        star init my-project && cd my-project
        star add button && star dev app.py
        \`\`\`
        
        See the [CHANGELOG](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
        EOF
        fi
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: StarUI v${{ steps.version.outputs.version }}
        body_path: version_changelog.md
        draft: false
        prerelease: ${{ steps.prerelease.outputs.prerelease }}
        
    - name: Upload Distribution Files
      run: |
        for file in dist/*; do
          gh release upload "v${{ steps.version.outputs.version }}" "$file"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}